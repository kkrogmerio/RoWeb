{"version":3,"sources":["Header.js"],"names":["React","SideTabBar","Platform","StatusBar","StyleSheet","View","Text","Dimensions","useTheme","SafeAreaConsumer","HeaderTitle","getDefaultHeaderHeight","statusBarHeight","layout","get","isLandscape","width","height","headerHeight","OS","isPad","Header","descriptor","insets","colors","top","title","tabBarLabel","titleIcon","tabBarIcon","options","styles","header","paddingTop","borderBottomColor","border","text","create","marginLeft","elevation","backgroundColor","paddingLeft","alignItems","borderBottomWidth","hairlineWidth","flexDirection","HeaderWrapper","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,IAA1C,EAAgDC,IAAhD,EAAsDC,UAAtD,QAAwE,cAAxE;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,OAAO,MAAMC,sBAAsB,GAAIC,eAAD,IAAqB;AACzD,QAAMC,MAAM,GAAGN,UAAU,CAACO,GAAX,CAAe,QAAf,CAAf;AACA,QAAMC,WAAW,GAAGF,MAAM,CAACG,KAAP,GAAeH,MAAM,CAACI,MAA1C;AAEA,MAAIC,YAAJ;;AAEA,MAAIhB,QAAQ,CAACiB,EAAT,KAAgB,KAApB,EAA2B;AACzB;AACA,QAAIJ,WAAW,IAAI,CAACb,QAAQ,CAACkB,KAA7B,EAAoC;AAClCF,MAAAA,YAAY,GAAG,EAAf;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,GAAG,EAAf;AACD;AACF,GAPD,MAOO,IAAIhB,QAAQ,CAACiB,EAAT,KAAgB,SAApB,EAA+B;AACpCD,IAAAA,YAAY,GAAG,EAAf;AACD,GAFM,MAEA;AACLA,IAAAA,YAAY,GAAG,EAAf;AACD;;AAED,SAAOA,YAAY,GAAGN,eAAtB;AACD,CApBM;;AAuBP,MAAMS,MAAM,GAAG,CAAC;AACdC,EAAAA,UADc;AAEdC,EAAAA;AAFc,CAAD,KAGT;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAahB,QAAQ,EAA3B;AAEA,QAAMU,YAAY,GAAGP,sBAAsB,CAACY,MAAM,CAACE,GAAR,CAA3C;AAEA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFP,UAAU,CAACQ,OALf;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,UAApB;AAA+B,IAAA,KAAK,EAAE,CACpCC,MAAM,CAACC,MAD6B,EAEpC;AACEC,MAAAA,UAAU,EAAEV,MAAM,GAAGA,MAAM,CAACE,GAAV,GAAgB,CADpC;AAEER,MAAAA,MAAM,EAAEC,YAFV;AAGEgB,MAAAA,iBAAiB,EAAEV,MAAM,CAACW;AAH5B,KAFoC;AAAtC,KAQG,OAAOP,SAAP,KAAqB,UAArB,IAAmCA,SAAS,EAR/C,eASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEG,MAAM,CAACK;AAA3B,KACGV,KAAK,IAAIC,WADZ,CATF,CADF;AAeD,CA9BD;;AAgCA,MAAMI,MAAM,GAAG3B,UAAU,CAACiC,MAAX,CAAkB;AAC/BD,EAAAA,IAAI,EAAE;AACJE,IAAAA,UAAU,EAAE;AADR,GADyB;AAI/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,SAAS,EAAE,CADL;AAENC,IAAAA,eAAe,EAAE,MAFX;AAGNC,IAAAA,WAAW,EAAE,EAHP;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,iBAAiB,EAAEvC,UAAU,CAACwC,aALxB;AAMNC,IAAAA,aAAa,EAAE;AANT;AAJuB,CAAlB,CAAf;;AAeA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,oBAAC,gBAAD,QACGxB,MAAM,iBACL,oBAAC,MAAD;AACE,IAAA,MAAM,EAAEA;AADV,KAEMwB,KAFN,EAFJ,CADF;AAUD,CAXD;;AAaA,eAAeD,aAAf","sourcesContent":["import React from 'react';\nimport SideTabBar from '../SideTabBar';\nimport { Platform, StatusBar, StyleSheet, View, Text, Dimensions } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\nimport HeaderTitle from './HeaderTitle';\n\n\nexport const getDefaultHeaderHeight = (statusBarHeight) => {\n  const layout = Dimensions.get('window')\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\n\nconst Header = ({\n  descriptor,\n  insets\n}) => {\n  const { colors } = useTheme();\n  \n  const headerHeight = getDefaultHeaderHeight(insets.top);\n\n  const {\n    title,\n    tabBarLabel,\n    titleIcon,\n    tabBarIcon\n  } = descriptor.options\n\n  return (\n    <View pointerEvents=\"box-none\" style={[\n      styles.header,\n      {\n        paddingTop: insets ? insets.top : 0,\n        height: headerHeight,\n        borderBottomColor: colors.border,\n      },\n    ]}>\n      {typeof titleIcon === 'function' && titleIcon()}\n      <HeaderTitle style={styles.text}>\n        {title || tabBarLabel}\n      </HeaderTitle>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginLeft: 16\n  },\n  header: {\n    elevation: 8,\n    backgroundColor: '#FFF',\n    paddingLeft: 16,\n    alignItems: 'center',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  }\n});\n\n\nconst HeaderWrapper = (props) => {\n  return (\n    <SafeAreaConsumer>\n      {insets => (\n        <Header\n          insets={insets}\n          {...props}\n        />\n      )}\n    </SafeAreaConsumer>\n  )\n}\n\nexport default HeaderWrapper;"]}